<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACk
        CQAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBoAAUcBUgFNAfkBTAFCATUB/wFMAUIBNQH/AUwBQgE1Af8BTAFCATUB/wFM
        AUIBNQH/AUwBQgE1Af8BTAFCATUB/wFMAUIBNQH/AUwBQgE1Af8BTAFCATUB/wFGAUcBPwH8EAABRwFS
        AU0B+QFMAUIBNQH/AUwBQgE1Af8BTAFCATUB/wFMAUIBNQH/AUwBQgE1Af8BTAFCATUB/wFMAUIBNQH/
        AUwBQgE1Af8BTAFCATUB/wFMAUIBNQH/AUYBRwE/AfyQAAFFAXMBfgHpATEBeQGMAf8BMQF5AYwB/wEx
        AXkBjAH/ATEBeQGMAf8BMQF5AYwB/wExAXkBjAH/ATEBeQGMAf8BMQF5AYwB/wExAXkBjAH/ATEBeQGM
        Af8BPQF4AYYB9BAAAUUBcwF+AekBMQF5AYwB/wExAXkBjAH/ATEBeQGMAf8BMQF5AYwB/wExAXkBjAH/
        ATEBeQGMAf8BMQF5AYwB/wExAXkBjAH/ATEBeQGMAf8BMQF5AYwB/wE9AXgBhgH0kAABQgGAAZEB2AET
        AboB6wH/ARMBugHrAf8BEwG6AesB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wETAboB6wH/ARMBugHr
        Af8BEwG6AesB/wETAboB6wH/ATMBmQG4AewQAAFCAYABkQHYARMBugHrAf8BEwG6AesB/wETAboB6wH/
        ARMBugHrAf8BEwG6AesB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wETAboB6wH/ARMBugHrAf8BMwGZ
        AbgB7JAAAUIBgAGRAdgBEwG6AesB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wEuAZEBrQH/AUgBZgFu
        Af8BFAG5AeoB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wEzAZkBuAHsEAABQgGAAZEB2AETAboB6wH/
        ARMBugHrAf8BEwG6AesB/wETAboB6wH/AS4BkQGtAf8BSAFmAW4B/wEUAbkB6gH/ARMBugHrAf8BEwG6
        AesB/wETAboB6wH/ATMBmQG4AeyQAAFCAYABkQHYARMBugHrAf8BEwG6AesB/wETAboB6wH/ARMBugHr
        Af8BQgFyAYMB/wFdAUcBPwH/AR0BrQHXAf8BEwG6AesB/wETAboB6wH/ARMBugHrAf8BMwGZAbgB7BAA
        AUIBgAGRAdgBEwG6AesB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wFCAXIBgwH/AV0BRwE/Af8BHQGt
        AdcB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wEzAZkBuAHskAABQgGAAZEB2AETAboB6wH/ARMBugHr
        Af8BEwG6AesB/wETAboB6wH/AUEBcgGCAf8BXQFHAT8B/wEcAa0B1wH/ARMBugHrAf8BEwG6AesB/wET
        AboB6wH/ATMBmQG4AewQAAFCAYABkQHYARMBugHrAf8BEwG6AesB/wETAboB6wH/ARMBugHrAf8BQQFy
        AYIB/wFdAUcBPwH/ARwBrQHXAf8BEwG6AesB/wETAboB6wH/ARMBugHrAf8BMwGZAbgB7JAAAUIBgAGR
        AdgBEwG6AesB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wElAaEBxQH/ATQBiQGiAf8BFAG5AeoB/wET
        AboB6wH/ARMBugHrAf8BEwG6AesB/wEzAZkBuAHsEAABQgGAAZEB2AETAboB6wH/ARMBugHrAf8BEwG6
        AesB/wETAboB6wH/ASUBoQHFAf8BNAGJAaIB/wEUAbkB6gH/ARMBugHrAf8BEwG6AesB/wETAboB6wH/
        ATMBmQG4AeyQAAFCAYABkQHYARMBugHrAf8BEwG6AesB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wET
        AboB6wH/ARMBugHrAf8BEwG6AesB/wETAboB6wH/ARMBugHrAf8BMwGZAbgB7BAAAUIBgAGRAdgBEwG6
        AesB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wETAboB6wH/ARMBugHrAf8BEwG6AesB/wETAboB6wH/
        ARMBugHrAf8BEwG6AesB/wEzAZkBuAHskAABTAFWAVkBnwFMAWgBcAG8AUwBaAFwAbwBTAFoAXABvAFM
        AWgBcAG8AUwBaAFwAbwBTAFoAXABvAFMAWgBcAG8AUwBbwF4AccBPAGMAaIB7AFMAWgBcAG8AU4BXwFj
        Aa4QAAFMAVYBWQGfAUwBaAFwAbwBKwGTAbQB+QFGAXwBiwHZAUwBawF0AcABTAFrAXQBwAFMAWsBdAHA
        AUwBawF0AcABSwF0AYIBzgE5AYwBpAHuAUwBaAFwAbwBTgFfAWMBrrAAAyYBOAFYAVQBUwG8IAABXwFS
        AU0B6AM7AWQQAAMmATgBWAFUAVMBvKAAAxcBIAMKAQ0QAAMmATgBWAFUAVMBvCAAAV8BUgFNAegDOwFk
        EAADJgE4AVgBVAFTAbygAAFfAVYBUgHgAzsBYxAAAyYBOAFYAVQBUwG8IAABXwFSAU0B6AM7AWQQAAMm
        ATgBWAFUAVMBvKAAAV0BVgFUAdIDQgFzEAADMgFRAVYCVAGyIAABXQFWAVQB0gNCAXMQAAMyAVEBVgJU
        AbKgAANHAYIBWAJVAbcMAAMDAQQBXQFXAVQB0QNKAYogAANHAYIBWAJVAbcMAAMDAQQBXQFXAVQB0QNK
        AYqgAAMGAQgBWAFWAVQBuwFXAVYBVAG4Az8BbQM+AWoBWAFUAVMBtgFdAVcBVAHRAxgBIiAAAwYBCAFY
        AVYBVAG7AVcBVgFUAbgDPwFtAz4BagFYAVQBUwG2AV0BVwFUAdEDGAEipAADBAEGAkcBRgGBAWABVAFS
        Ad4BXwFTAVAB4wFGAkUBfSwAAwQBBgJHAUYBgQFgAVQBUgHeAV8BUwFQAeMBRgJFAX2YAAFCAU0BPgcA
        AT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQABwAEDAcABAwQAAcABAwHAAQMEAAHAAQMBwAED
        BAABwAEDAcABAwQAAcABAwHAAQMEAAHAAQMBwAEDBAABwAEDAcABAwQAAcABAwHAAQMEAAHAAQMBwAED
        BAAB/wHPAfMBzwQAAfMBzwHzAc8EAAHzAc8B8wHPBAAB8wHPAfMBzwQAAfMBjwHzAY8EAAHwAQ8B8AEP
        BAAB+AE/AfgBPwQACw==
</value>
  </data>
</root>